{"ast":null,"code":"var _jsxFileName = \"/Users/chrisunjae/Documents/Programming/Bandit/src/Game.js\";\nimport React from 'react';\nimport Board from './Board';\nimport Entry from './Entry';\nimport WordList from './WordList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dictionary: require(\"./data/words_dictionary.json\"),\n      wordList: [],\n      flippedTiles: []\n    };\n    let ref = /*#__PURE__*/React.createRef();\n  }\n  handleSubmit(word) {\n    let valid;\n    if (!(word in this.state.dictionary)) {\n      valid = false;\n    } else {\n      valid = true;\n      let freqs = charCounts(word);\n      let freqs_copy = JSON.parse(JSON.stringify(freqs));\n      for (let i = 0; i < this.state.flippedTiles.length; i++) {\n        if (this.state.flippedTiles[i] in freqs_copy) {\n          freqs_copy[this.state.flippedTiles[i]]--;\n        }\n      }\n      let maxFreq = 0;\n      for (const c in freqs_copy) {\n        maxFreq = Math.max(freqs_copy[c], maxFreq);\n      }\n      if (maxFreq > 0) {\n        valid = false;\n      } else {\n        for (let i = this.state.flippedTiles.length - 1; i >= 0; i--) {\n          let c = this.state.flippedTiles[i];\n          if (c in freqs && freqs[c] > 0) {\n            freqs[c]--;\n            this.state.flippedTiles.splice(i, 1);\n          }\n        }\n      }\n      // TODO: check if word can be made from steals\n    }\n\n    if (valid) {\n      this.setState({\n        wordList: [...this.state.wordList, word]\n      });\n    }\n    return valid;\n  }\n  handleFlip(tile) {\n    this.setState({\n      flippedTiles: [...this.state.flippedTiles, tile]\n    });\n    this.ref.current.focus();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        onFlip: tile => this.handleFlip(tile),\n        flippedTiles: this.state.flippedTiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Entry, {\n        onSubmit: word => this.handleSubmit(word),\n        ref: this.ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WordList, {\n        wordList: this.state.wordList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction charCounts(s) {\n  return [...s].reduce((a, e) => {\n    a[e] = a[e] ? a[e] + 1 : 1;\n    return a;\n  }, {});\n}\nexport default Game;","map":{"version":3,"names":["React","Board","Entry","WordList","Game","Component","constructor","props","state","dictionary","require","wordList","flippedTiles","ref","createRef","handleSubmit","word","valid","freqs","charCounts","freqs_copy","JSON","parse","stringify","i","length","maxFreq","c","Math","max","splice","setState","handleFlip","tile","current","focus","render","s","reduce","a","e"],"sources":["/Users/chrisunjae/Documents/Programming/Bandit/src/Game.js"],"sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport Entry from './Entry';\nimport WordList from './WordList';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dictionary: require(\"./data/words_dictionary.json\"),\n      wordList: [],\n      flippedTiles: [],\n    }\n    let ref = React.createRef();\n  }\n\n  handleSubmit(word) {\n    let valid;\n    if (!(word in this.state.dictionary)) {\n      valid = false;\n    }\n    else {\n      valid = true;\n      let freqs = charCounts(word);\n      let freqs_copy = JSON.parse(JSON.stringify(freqs));\n      for (let i = 0; i < this.state.flippedTiles.length; i++) {\n        if (this.state.flippedTiles[i] in freqs_copy) {\n          freqs_copy[this.state.flippedTiles[i]]--;\n        }\n      }\n      let maxFreq = 0;\n      for (const c in freqs_copy) {\n        maxFreq = Math.max(freqs_copy[c], maxFreq);\n      }\n      if (maxFreq > 0) {\n        valid = false;\n      }\n      else {\n        for (let i = this.state.flippedTiles.length - 1; i >= 0; i--) {\n          let c = this.state.flippedTiles[i];\n          if (c in freqs && freqs[c] > 0) {\n            freqs[c]--;\n            this.state.flippedTiles.splice(i, 1);\n          }\n        }\n      }\n      // TODO: check if word can be made from steals\n    }\n    if (valid) {\n      this.setState({\n        wordList: [...this.state.wordList, word],\n      })\n    }\n    return valid;\n  }\n\n  handleFlip(tile) {\n    this.setState({\n      flippedTiles: [...this.state.flippedTiles, tile]\n    });\n    this.ref.current.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <Board\n          onFlip={(tile) => this.handleFlip(tile)} \n          flippedTiles={this.state.flippedTiles}\n        />\n        <Entry onSubmit={(word) => this.handleSubmit(word)} ref={this.ref}/>\n        <WordList wordList={this.state.wordList} />\n      </div>\n    );\n  }\n}\n\nfunction charCounts(s) {\n  return [...s].reduce((a, e) => { a[e] = a[e] ? a[e] + 1 : 1; return a }, {});\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}