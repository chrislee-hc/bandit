{"ast":null,"code":"var _jsxFileName = \"/Users/chrisunjae/Documents/Programming/Bandit/bandit-client/src/WordList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./WordList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordList(props) {\n  /*\n  let [wordList, setWordList] = useState([]);\n   useEffect(() => {\n    const handleUpdateWordList = (lst) => {\n      setWordList(lst);\n    };\n    props.socket.on(\"updateWordList\", handleUpdateWordList);\n    return () => {\n      props.socket.off(\"updateWordList\", handleUpdateWordList);\n    };\n  }, [props.socket]);\n   const wordListElt = wordList.map((elt, idx) => (\n    <div key={idx} className=\"word-container\">\n      {elt.toUpperCase()}\n    </div>\n  ));\n  */\n\n  let score = 0;\n  for (let i = 0; i < props.wordList.length; i++) {\n    score += props.wordList[i].length;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-list-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-name\",\n        children: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-list\",\n      children: props.wordList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = WordList;\nexport default WordList;\nvar _c;\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["React","useState","useEffect","WordList","props","score","i","wordList","length","username"],"sources":["/Users/chrisunjae/Documents/Programming/Bandit/bandit-client/src/WordList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WordList.css\";\n\nfunction WordList(props) {\n  /*\n  let [wordList, setWordList] = useState([]);\n\n  useEffect(() => {\n    const handleUpdateWordList = (lst) => {\n      setWordList(lst);\n    };\n    props.socket.on(\"updateWordList\", handleUpdateWordList);\n    return () => {\n      props.socket.off(\"updateWordList\", handleUpdateWordList);\n    };\n  }, [props.socket]);\n\n  const wordListElt = wordList.map((elt, idx) => (\n    <div key={idx} className=\"word-container\">\n      {elt.toUpperCase()}\n    </div>\n  ));\n  */\n\n  let score = 0;\n  for (let i = 0; i < props.wordList.length; i++) {\n    score += props.wordList[i].length;\n  }\n\n  return (\n    <div className=\"word-list-container\">\n      <div className=\"word-list-title\">\n        <div className=\"user-name\">{props.username}</div>\n        <div className=\"user-score\">{score}</div>\n      </div>\n      <div className=\"word-list\">{props.wordList}</div>\n    </div>\n  );\n}\n\nexport default WordList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC;AAExB,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE,IAAIC,KAAK,GAAG,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,QAAQ,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC9CD,KAAK,IAAID,KAAK,CAACG,QAAQ,CAACD,CAAC,CAAC,CAACE,MAAM;EACnC;EAEA,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,wBAClC;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAK,SAAS,EAAC,WAAW;QAAA,UAAEJ,KAAK,CAACK;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,eACjD;QAAK,SAAS,EAAC,YAAY;QAAA,UAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,UAAED,KAAK,CAACG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEV;AAAC,KAnCQJ,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}