{"ast":null,"code":"var _jsxFileName = \"/Users/chrisunjae/Documents/Programming/Bandit/src/SocketTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, UseState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SocketTest(_ref) {\n  _s();\n  let {\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState({});\n  useEffect(() => {\n    const messageListener = message => {\n      setMessages(prevMessages => {\n        const newMessages = {\n          ...prevMessages\n        };\n        newMessages[message.id] = message;\n        return newMessages;\n      });\n    };\n    const deleteMessageListener = messageID => {\n      setMessages(prevMessages => {\n        const newMessages = {\n          ...prevMessages\n        };\n        delete newMessages[messageID];\n        return newMessages;\n      });\n    };\n    socket.on(\"message\", messageListener);\n    socket.on(\"deleteMessage\", deleteMessageListener);\n    socket.emit(\"getMessages\");\n    return () => {\n      socket.off(\"message\", messageListener);\n      socket.off(\"deleteMessage\", deleteMessageListener);\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    children: [...Object.values(messages)].sort((a, b) => a.time - b.time).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      title: `Sent at ${new Date(message.time).toLocaleTimeString()}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user\",\n        children: [message.user.name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message\",\n        children: message.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: new Date(message.time).toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(SocketTest, \"Pc3xIb107nUA4gS60UTTAJZW5js=\");\n_c = SocketTest;\nexport default SocketTest;\nvar _c;\n$RefreshReg$(_c, \"SocketTest\");","map":{"version":3,"names":["React","useEffect","useState","UseState","SocketTest","socket","messages","setMessages","messageListener","message","prevMessages","newMessages","id","deleteMessageListener","messageID","on","emit","off","Object","values","sort","a","b","time","map","Date","toLocaleTimeString","user","name","value"],"sources":["/Users/chrisunjae/Documents/Programming/Bandit/src/SocketTest.js"],"sourcesContent":["import React, { useEffect, useState, UseState } from \"react\";\n\nfunction SocketTest({ socket }) {\n  const [messages, setMessages] = useState({});\n\n  useEffect(() => {\n    const messageListener = (message) => {\n      setMessages((prevMessages) => {\n        const newMessages = { ...prevMessages };\n        newMessages[message.id] = message;\n        return newMessages;\n      });\n    };\n\n    const deleteMessageListener = (messageID) => {\n      setMessages((prevMessages) => {\n        const newMessages = { ...prevMessages };\n        delete newMessages[messageID];\n        return newMessages;\n      });\n    };\n\n    socket.on(\"message\", messageListener);\n    socket.on(\"deleteMessage\", deleteMessageListener);\n    socket.emit(\"getMessages\");\n\n    return () => {\n      socket.off(\"message\", messageListener);\n      socket.off(\"deleteMessage\", deleteMessageListener);\n    };\n  }, [socket]);\n\n  return (\n    <div className=\"message-list\">\n      {[...Object.values(messages)]\n        .sort((a, b) => a.time - b.time)\n        .map((message) => (\n          <div\n            key={message.id}\n            className=\"message-container\"\n            title={`Sent at ${new Date(message.time).toLocaleTimeString()}`}\n          >\n            <span className=\"user\">{message.user.name}:</span>\n            <span className=\"message\">{message.value}</span>\n            <span className=\"date\">\n              {new Date(message.time).toLocaleTimeString()}\n            </span>\n          </div>\n        ))}\n    </div>\n  );\n}\nexport default SocketTest;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE7D,SAASC,UAAU,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMO,eAAe,GAAIC,OAAO,IAAK;MACnCF,WAAW,CAAEG,YAAY,IAAK;QAC5B,MAAMC,WAAW,GAAG;UAAE,GAAGD;QAAa,CAAC;QACvCC,WAAW,CAACF,OAAO,CAACG,EAAE,CAAC,GAAGH,OAAO;QACjC,OAAOE,WAAW;MACpB,CAAC,CAAC;IACJ,CAAC;IAED,MAAME,qBAAqB,GAAIC,SAAS,IAAK;MAC3CP,WAAW,CAAEG,YAAY,IAAK;QAC5B,MAAMC,WAAW,GAAG;UAAE,GAAGD;QAAa,CAAC;QACvC,OAAOC,WAAW,CAACG,SAAS,CAAC;QAC7B,OAAOH,WAAW;MACpB,CAAC,CAAC;IACJ,CAAC;IAEDN,MAAM,CAACU,EAAE,CAAC,SAAS,EAAEP,eAAe,CAAC;IACrCH,MAAM,CAACU,EAAE,CAAC,eAAe,EAAEF,qBAAqB,CAAC;IACjDR,MAAM,CAACW,IAAI,CAAC,aAAa,CAAC;IAE1B,OAAO,MAAM;MACXX,MAAM,CAACY,GAAG,CAAC,SAAS,EAAET,eAAe,CAAC;MACtCH,MAAM,CAACY,GAAG,CAAC,eAAe,EAAEJ,qBAAqB,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,oBACE;IAAK,SAAS,EAAC,cAAc;IAAA,UAC1B,CAAC,GAAGa,MAAM,CAACC,MAAM,CAACb,QAAQ,CAAC,CAAC,CAC1Bc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,CAAC,CAC/BC,GAAG,CAAEf,OAAO,iBACX;MAEE,SAAS,EAAC,mBAAmB;MAC7B,KAAK,EAAG,WAAU,IAAIgB,IAAI,CAAChB,OAAO,CAACc,IAAI,CAAC,CAACG,kBAAkB,EAAG,EAAE;MAAA,wBAEhE;QAAM,SAAS,EAAC,MAAM;QAAA,WAAEjB,OAAO,CAACkB,IAAI,CAACC,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS,eAClD;QAAM,SAAS,EAAC,SAAS;QAAA,UAAEnB,OAAO,CAACoB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAChD;QAAM,SAAS,EAAC,MAAM;QAAA,UACnB,IAAIJ,IAAI,CAAChB,OAAO,CAACc,IAAI,CAAC,CAACG,kBAAkB;MAAE;QAAA;QAAA;QAAA;MAAA,QACvC;IAAA,GARFjB,OAAO,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAUlB;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEV;AAAC,GAjDQR,UAAU;AAAA,KAAVA,UAAU;AAkDnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}