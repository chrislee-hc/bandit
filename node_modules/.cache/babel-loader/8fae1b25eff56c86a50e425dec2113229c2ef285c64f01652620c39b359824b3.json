{"ast":null,"code":"var _jsxFileName = \"/Users/chrisunjae/Documents/Programming/Bandit/client/src/WordList.js\";\nimport \"./stylesheets/WordList.css\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordList(props) {\n  const wordListElt = props.wordList.map((elt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-container\",\n    children: elt.toUpperCase()\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this));\n  let score = 0;\n  for (let i = 0; i < props.wordList.length; i++) {\n    score += props.wordList[i].length;\n  }\n  const usernameClass = classNames(\"WordList\", {\n    \"user-name\": !props.isCurrent,\n    \"user-name-current\": props.isCurrent\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-list-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: usernameClass,\n        children: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-list\",\n      children: wordListElt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = WordList;\nexport default WordList;\nvar _c;\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["classNames","WordList","props","wordListElt","wordList","map","elt","idx","toUpperCase","score","i","length","usernameClass","isCurrent","username"],"sources":["/Users/chrisunjae/Documents/Programming/Bandit/client/src/WordList.js"],"sourcesContent":["import \"./stylesheets/WordList.css\";\nimport classNames from \"classnames\";\n\nfunction WordList(props) {\n  const wordListElt = props.wordList.map((elt, idx) => (\n    <div key={idx} className=\"word-container\">\n      {elt.toUpperCase()}\n    </div>\n  ));\n\n  let score = 0;\n  for (let i = 0; i < props.wordList.length; i++) {\n    score += props.wordList[i].length;\n  }\n\n  const usernameClass = classNames(\"WordList\", {\n    \"user-name\": !props.isCurrent,\n    \"user-name-current\": props.isCurrent,\n  });\n\n  return (\n    <div className=\"word-list-container\">\n      <div className=\"word-list-title\">\n        <div className={usernameClass}>{props.username}</div>\n        <div className=\"user-score\">{score}</div>\n      </div>\n      <div className=\"word-list\">{wordListElt}</div>\n    </div>\n  );\n}\n\nexport default WordList;\n"],"mappings":";AAAA,OAAO,4BAA4B;AACnC,OAAOA,UAAU,MAAM,YAAY;AAAC;AAEpC,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB,MAAMC,WAAW,GAAGD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBAC9C;IAAe,SAAS,EAAC,gBAAgB;IAAA,UACtCD,GAAG,CAACE,WAAW;EAAE,GADVD,GAAG;IAAA;IAAA;IAAA;EAAA,QAGd,CAAC;EAEF,IAAIE,KAAK,GAAG,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACE,QAAQ,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IAC9CD,KAAK,IAAIP,KAAK,CAACE,QAAQ,CAACM,CAAC,CAAC,CAACC,MAAM;EACnC;EAEA,MAAMC,aAAa,GAAGZ,UAAU,CAAC,UAAU,EAAE;IAC3C,WAAW,EAAE,CAACE,KAAK,CAACW,SAAS;IAC7B,mBAAmB,EAAEX,KAAK,CAACW;EAC7B,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,wBAClC;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAK,SAAS,EAAED,aAAc;QAAA,UAAEV,KAAK,CAACY;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,eACrD;QAAK,SAAS,EAAC,YAAY;QAAA,UAAEL;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,UAAEN;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEV;AAAC,KA1BQF,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}